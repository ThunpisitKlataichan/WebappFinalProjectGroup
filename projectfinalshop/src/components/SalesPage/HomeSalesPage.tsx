import { useMemo, useState, useEffect } from "react";
// import TH from "./SalesTH"; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
// import ProductRow from "./ProductRow"; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
import { Link } from "react-router-dom";
import API_Url from "../types/APIUrl";
import type { InstrumentProps } from "../types/InstrumentTypes";
import axios from "axios";
import AddProductModal from "./AddProductModal";
import { Eye, Edit, Trash2, CheckSquare, XSquare } from "lucide-react"; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô

// ===================================================================
// == MOCK COMPONENTS (‡πÄ‡∏û‡∏∑‡πà‡∏≠ C-ompile) ==
// ===================================================================
// (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ Component ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)

const TH = ({ children, ...props }: any) => (
  <th
    className="px-6 py-3 text-xs font-semibold tracking-wider text-gray-500 uppercase bg-gray-100 border-b border-gray-200 text-left"
    {...props}
  >
    {children}
  </th>
);

const ProductRow = ({
  product,
  onView,
  onEdit,
  onDelete,
  onToggleShowOnHome,
}: any) => (
  <tr className="border-b border-gray-200 hover:bg-gray-50 transition">
    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
      <div className="flex items-center gap-3">
        <img
          src={product.imageUrl || "https://placehold.co/40x40/eee/aaa?text=?"}
          alt={product.model}
          className="w-10 h-10 rounded-md object-cover"
        />
        {product.model}
      </div>
    </td>
    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
      {product.type}
    </td>
    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
      {product.price.toLocaleString()}
    </td>
    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-700 text-right">
      {product.stock}
    </td>
    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-right">
      <button
        onClick={() => onToggleShowOnHome(product)}
        className={`p-2 rounded-lg ${
          product.isShown
            ? "text-green-600 hover:text-green-900"
            : "text-gray-400 hover:text-gray-600"
        }`}
        title={product.isShown ? "‡∏ã‡πà‡∏≠‡∏ô" : "‡πÅ‡∏™‡∏î‡∏á"}
      >
        {product.isShown ? <CheckSquare size={18} /> : <XSquare size={18} />}
      </button>
      <button
        onClick={() => onView(product)}
        className="text-indigo-600 hover:text-indigo-900 p-2"
        title="‡∏î‡∏π"
      >
        <Eye size={18} />
      </button>
      <button
        onClick={() => onEdit(product)}
        className="text-yellow-600 hover:text-yellow-900 p-2"
        title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"
      >
        <Edit size={18} />
      </button>
      <button
        onClick={() => onDelete(product)}
        className="text-red-600 hover:text-red-900 p-2"
        title="‡∏•‡∏ö"
      >
        <Trash2 size={18} />
      </button>
    </td>
  </tr>
);

// ===================================================================
// == PAGE COMPONENT (Fixed) ==
// ===================================================================

function HomeSalesPage() {
  const [products, setProducts] = useState<InstrumentProps[]>([]);
  const [openModal, setOpenModal] = useState(false);
  const [statusMessage, setStatusMessage] = useState(""); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô

  const [query, setQuery] = useState("");

  const filtered = useMemo(() => {
    const q = query.trim().toLowerCase();
    return q
      ? products.filter((p) => p.model.toLowerCase().includes(q))
      : products;
  }, [products, query]);

  const fetchProducts = async () => {
    setStatusMessage("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...");
    try {
      const response = await fetch(API_Url() + "/instruments");
      const data = await response.json();
      setProducts(data);
      setStatusMessage(""); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    } catch (error) {
      setStatusMessage("Error: ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
    }
  };
  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡πÇ‡∏´‡∏•‡∏î
  useEffect(() => {
    fetchProducts();
  }, []);

  // 1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  const handleAdd = () => setOpenModal(true);

  // 2. ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° (‚≠ê ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° async/await ‡πÅ‡∏•‡∏∞ axios.post)
  const handleConfirm = async (form: any, file: string | null) => {
    console.log("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà:", form, file);
    setStatusMessage("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...");

    try {
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ price/stock ‡∏à‡∏≤‡∏Å string ‡πÄ‡∏õ‡πá‡∏ô number ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
      const dataToSend = {
        ...form,
        price: parseFloat(form.price) || 0,
        stock: parseInt(form.stock, 10) || 0,
        imageUrl : file
      };

      await axios.post(API_Url() + "/instruments", dataToSend);
      setStatusMessage("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      await fetchProducts(); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    } catch (error) {
      console.error("Error adding product:", error);
      setStatusMessage("Error: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
    }
  };

  // 3. ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  const handleView = (p: InstrumentProps) => {
    alert(
      "Product Details:\n" +
        "ID: " +
        p._id +
        "\n" +
        "Product Name: " +
        p.model +
        "\n" +
        "Brand: " +
        p.brand +
        "\n" +
        "Type: " +
        p.type +
        "\n" +
        "Price: " +
        p.price.toLocaleString() +
        " ‡∏ö‡∏≤‡∏ó\n" +
        "Stock: " +
        p.stock +
        "\n" +
        "Description: " +
        p.description +
        "\n" +
        "isShown: " +
        p.isShown +
        "\n" +
        "ImgUrl: " +
        p.imageUrl
    );
  };

  // 4. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‚≠ê ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Modal ‡∏´‡∏£‡∏∑‡∏≠ async/await)
  // (‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ prompt() ‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏ô‡∏±‡∏Å ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Modal ‡πÅ‡∏ö‡∏ö Add)
  const handleEdit = async (p: InstrumentProps) => {
    const name = prompt("Enter new product name:", p.model) || p.model;
    const brand = prompt("Enter new brand:", p.brand) || p.brand;
    const priceStr =
      prompt("Enter new price:", p.price.toString()) || p.price.toString();
    const stockStr =
      prompt("Enter new stock:", p.stock.toString()) || p.stock.toString();
    const description =
      prompt("Enter new description:", p.description) || p.description;
    const type = prompt("Enter new product category:", p.type) || p.type;

    const imageUrl = prompt("Enter new product URL-Image:")||p.imageUrl;
    // (‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏≤‡∏° imageUrl ‡πÅ‡∏•‡∏∞ isShown ‡∏î‡πâ‡∏ß‡∏¢)

    setStatusMessage("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï...");
    try {
      await axios.put(API_Url() + "/instruments/" + p._id, {
        ...p,
        model: name,
        brand: brand,
        type: type,
        price: parseFloat(priceStr),
        stock: parseInt(stockStr),
        description: description,
        imageUrl : imageUrl
        // isShown: ..., (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)
      });

      setStatusMessage("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      await fetchProducts(); // ‡∏£‡∏≠‡πÉ‡∏´‡πâ .put ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô
    } catch (error) {
      console.error("Error updating product:", error);
      setStatusMessage("Error: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
    }
  }; // 5. ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‚≠ê ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° async/await ‡πÅ‡∏•‡∏∞ confirm)

  const handleDelete = async (p: InstrumentProps) => {
    if (!window.confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö: ${p.model}?`)) {
      return;
    }

    setStatusMessage("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö...");
    try {
      await axios.delete(API_Url() + "/instruments/" + p._id);
      setStatusMessage("‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      await fetchProducts(); // ‡∏£‡∏≠‡πÉ‡∏´‡πâ .delete ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô
    } catch (error) {
      console.error("Error deleting product:", error);
      setStatusMessage("Error: ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
    }
  };

  // 6. ‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÇ‡∏ä‡∏ß‡πå‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô (‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß)
  const handleOnshow = (p: InstrumentProps) => {
    setStatusMessage("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞...");
    axios
      .put(API_Url() + "/instruments/" + p._id, {
        ...p,
        isShown: !p.isShown,
      })
      .then(() => {
        setStatusMessage("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        fetchProducts(); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢
      })
      .catch(() => {
        setStatusMessage("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      });
  };

  return (
    <main className="min-h-screen bg-gray-50 py-6">
      {/* Header */}{" "}
      <div className="max-w-6xl mx-auto px-4 flex justify-between items-center mb-4">
        <h1 className="text-2xl font-bold text-gray-800">
          üè∑Ô∏è Product Management
        </h1>{" "}
        <div className="flex items-center gap-3">
          {" "}
          <Link
            to="/stock"
            className="px-4 py-2 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-100 transition"
          >
            üì¶ Stock{" "}
          </Link>{" "}
          <Link
            to="/login"
            className="px-4 py-2 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-100 transition"
          >
            üîê Logout{" "}
          </Link>{" "}
          <button
            onClick={handleAdd}
            className="bg-indigo-600 text-white px-4 py-2 rounded-lg shadow hover:bg-indigo-700 transition"
          >
            + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤{" "}
          </button>{" "}
          <AddProductModal
            open={openModal}
            onClose={() => setOpenModal(false)}
            onConfirm={handleConfirm}
          />{" "}
        </div>{" "}
      </div>
      {/* Status Message (‡πÅ‡∏ó‡∏ô alert) */}
      {statusMessage && (
        <div className="max-w-6xl mx-auto px-4 mb-4">
          <div
            className="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-3 rounded-lg"
            role="alert"
          >
            <p>{statusMessage}</p>
          </div>
        </div>
      )}
      {/* Search */}{" "}
      <div className="max-w-6xl mx-auto px-4 mb-4">
        {" "}
        <input
          type="text"
          placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤..."
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          className="w-full sm:w-1/3 border rounded-xl px-3 py-2 shadow-sm focus:ring-2 focus:ring-indigo-500"
        />{" "}
      </div>
      {/* Table */}{" "}
      <div className="max-w-6xl mx-auto border rounded-xl bg-white shadow-sm overflow-hidden">
        {" "}
        <table className="min-w-full">
          {" "}
          <thead>
            {" "}
            <tr>
              <TH width="40%">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</TH> <TH width="15%">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</TH>{" "}
              <TH width="15%">‡∏£‡∏≤‡∏Ñ‡∏≤</TH>{" "}
              <TH width="10%" align="right">
                ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
              </TH>{" "}
              <TH width="20%" align="right">
                ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
              </TH>{" "}
            </tr>{" "}
          </thead>{" "}
          <tbody>
            {" "}
            {filtered.length === 0 && !statusMessage.includes("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î") ? (
              <tr>
                {" "}
                <td colSpan={5} className="p-6 text-center text-gray-500">
                  {" "}
                  {query ? "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤" : "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á"}{" "}
                </td>{" "}
              </tr>
            ) : (
              filtered.map((p) => (
                <ProductRow
                  key={p._id} // ‡πÄ‡∏û‡∏¥‡πà‡∏° Key
                  product={p}
                  onView={handleView}
                  onEdit={handleEdit}
                  onDelete={handleDelete}
                  onToggleShowOnHome={handleOnshow}
                />
              ))
            )}
            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á */}
            {statusMessage.includes("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î") && (
              <tr>
                <td colSpan={5} className="p-6 text-center text-gray-500">
                  ... ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ...
                </td>
              </tr>
            )}{" "}
          </tbody>{" "}
        </table>{" "}
      </div>{" "}
    </main>
  );
}
export default HomeSalesPage;
